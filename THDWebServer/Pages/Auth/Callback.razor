@page "/callback"
@using Microsoft.AspNetCore.ProtectedBrowserStorage
@using Microsoft.Extensions.Logging
@using THDWebServer.Authentication
@using ThunderED.Classes.Enums
@inject ILogger<Callback> Logger
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider Auth

<div class="frontcolor container text-center pageHeader">
    @LM.Get("msgProcessingQuery")
</div>

@code
{
    protected override async Task OnInitializedAsync()
    {
        var ip = await ProtectedSessionStore.GetAsync<string>("ip");
        await base.OnInitializedAsync();
        await ProcessRequest(NavigationManager.Uri, ip);
    }

    private async Task ProcessRequest(string query, string ip)
    {
        if (!string.IsNullOrEmpty(query) && query.Contains('?'))
        {
            var request = query.Split('?')[1];
            await CallbackHelper.ProcessCallbackReply(NavigationManager, ProtectedSessionStore, (CustomAuthenticationStateProvider)Auth, request, ip, CallbackTypeEnum.Callback);
        }
        else NavigationManager.NavigateTo("/badrq");
    }
}
