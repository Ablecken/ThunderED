@page "/badrq"
@inject ProtectedSessionStorage ProtectedSessionStore
<div class="container" style="height: 100%">
    <div class="frontcolor text-center pageHeader">
        @((MarkupString)LM.Get("webAuthErrorHeader"))
    </div>

    <div class="centralizer">
        <div class="text-center">
            @if (WebUiHelper.GetAsset("eve_logo_light.png") != null)
            {
                <h1>
                    <img src="@WebUiHelper.GetAsset("eve_logo_light.png")" width="200" />
                </h1>
            }

            <p class="lead frontcolor fontTermShadow">@((MarkupString) Message1)</p>
            @if (!string.IsNullOrEmpty(Message2))
            {
                <p class="frontcolor fontTermShadow">@((MarkupString) Message2)</p>
            }
            @if (!string.IsNullOrEmpty(Message3))
            {
                <p class="frontcolor fontTermShadow">@((MarkupString) Message3)</p>
            }
            @if (WebUiHelper.GetAsset("fail.png") != null)
            {
                <p><img src="@WebUiHelper.GetAsset("fail.png")" width="90"/></p>
            }
            <p style="text-align: -webkit-center">
                <a href="@ReturnUrl"><div class='navButton2 text-center' role="button" style="width: 150px; height: 35px;">@LM.Get("backText")</div></a>
            </p>

        </div>
    </div>
</div>

@code
{
    public string ReturnUrl { get; set; }
    public string Message1 { get; set; }
    public string Message2 { get; set; }
    public string Message3 { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ReturnUrl = await ProtectedSessionStore.GetAndClear<string>("returnUrl") ?? "/";
        Message1 = await ProtectedSessionStore.GetAndClear<string>("message1");
        Message2 = await ProtectedSessionStore.GetAndClear<string>("message2");
        Message3 = await ProtectedSessionStore.GetAndClear<string>("message3");

        if(string.IsNullOrEmpty(Message1) && string.IsNullOrEmpty(Message2) && string.IsNullOrEmpty(Message3))
        {
            //default answer
            Message1 = LM.Get("404");
            Message2 = LM.Get("WebRequestUnexpected");
        }

        await base.OnInitializedAsync();
    }

}
